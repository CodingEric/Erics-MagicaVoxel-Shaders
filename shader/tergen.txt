//Via Github@CodingEric
//If you like this project, give it a star!
//The code is written by C/C++, but Magicavoxel requires its format to be txt (so weird..).
//Terrain Generator Shader for Magicavoxel
//Powered by Perlin Noise
//Command-line usage: 'xs tergen [seed] [altitude] [noise-scale]' (Each parameter is required or the code won't work correctly.)
//e.g. xs tergen 1248343 50 20
//It is recommended that you set the scene size to 126x126x126 for the best view.
//GNU GPL v3 License
float noise(int x, int y){
  x = x % 25;
  y = y % 25;
  int n = x + y * 57;
  n = (n<<13) ^ n;
  int o = ( n * ( n * n * int(iArgs[0]) + 789221 ) + 1376312589 ) & 0xFFFFFFFF;
  float oo = float(o)/1073741824.0f;
  float ooo = 1.0f - oo;
  return ooo;
}

float snoise(int x, int y){
  float co = (noise(x-1,y-1)+noise(x+1,y-1)+noise(x-1,y+1)+noise(x+1,y+1))/16.0f;
  float si = (noise(x-1,y)+noise(x+1,y)+noise(x,y-1)+noise(x,y+1))/8.0f;
  float ce = noise(x,y)/4.0f;
  return co+si+ce;
}

float cosini(float a, float b, float x){
  float ft = x*3.1415927;
  float f=(1-cos(ft))*0.5f;
  return a*(1-f)+b*f;
}

float inno(float x, float y){
  int intX=int(x);
  float fraX=x-intX;
  int intY=int(y);
  float fraY=y-intY;
  float v1=snoise(intX,intY);
  float v2=snoise(intX+1,intY);
  float v3=snoise(intX,intY+1);
  float v4=snoise(intX+1,intY+1);
  float i1=cosini(v1,v2,fraX);
  float i2=cosini(v3,v4,fraX);
  return cosini(i1,i2,fraY);
}

float pernoi(float x, float y){
  float total=0.0f;
  float p=0.45f;
  int n=20;
  for(int i=0;i<=n;i++){
    float freq=pow(float(2),i);
    float ampli=pow(p,i);
    total=total+inno(x*freq,y*freq)*ampli;
  }
  return total;
}

float map(vec3 v) {
  float height = int(float(pernoi(float(v.x)/float(iArgs[2]),float(v.y)/float(iArgs[2]))*iArgs[1]));
  if(int(v.z)<=int(height)){
    return 1;
  }
  return 0;
}



