// xs_begin
// arg : { var = 'z_index' name = 'Z-index' value = '1' range = '0 255' step = '1' precision = '0' }
// xs_end

// Projecting a 2D plane to 3D object below it
// MIT License
// Copyright (c) 2021 Tianyu Huang

int layerHeight;
float x,y,z;

float getColor(){
    return voxel(vec3(x,y,layerHeight));
}

int computeLayers(){
    int ret=0;
    for(int currentLayer=int(z)+1;currentLayer<=int(layerHeight);++currentLayer){
        if(voxel(vec3(x,y,float(currentLayer)))!=0.)++ret;
    }
    return ret;
}

float map(vec3 v){
    layerHeight=int(z_index);
    x=v.x,y=v.y,z=v.z;
    if(float(layerHeight)<=z||voxel(v)==0.)return voxel(v);
    float color=getColor();
    if(computeLayers()!=1)return voxel(v);
    return color==0.?voxel(v):color;
}